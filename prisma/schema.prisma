datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  mealPlans     MealPlan[]
}

model MealPlan {
  id           String   @id @default(cuid())
  mealPlanName String
  createdAt    DateTime @default(now())
  days         Day[]
  userId       String
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Day {
  id            String         @id @default(cuid())
  dayName       String
  MealsSections MealsSection[]
  mealPlanId    String
  MealPlan      MealPlan       @relation(fields: [mealPlanId], references: [id], onDelete: Cascade)

  @@index([mealPlanId])
}

model MealsSection {
  id               String   @id @default(cuid())
  createdAt        DateTime @default(now())
  mealsSectionName String
  meals            Meal[]
  dayId            String
  Day              Day      @relation(fields: [dayId], references: [id], onDelete: Cascade)

  @@index([dayId])
}

model Meal {
  id             String       @id @default(cuid())
  createdAt      DateTime     @default(now())
  mealId         String
  mealsSectionId String
  MealsSection   MealsSection @relation(fields: [mealsSectionId], references: [id], onDelete: Cascade)

  @@index([mealsSectionId])
}
